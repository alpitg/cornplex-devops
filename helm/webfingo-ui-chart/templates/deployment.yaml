apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app }}
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.app }}
  template:
    metadata:
      labels:
        app: {{ .Values.app }}
    spec:
      # securityContext: use securityContext for non-root-user, when we get an error related to user permission
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
        - name: {{ .Values.app }}
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          resources:
            requests:
              cpu: {{ .Values.resources.requests.cpu }}
              memory: {{ .Values.resources.requests.memory }}
            limits:
              cpu: {{ .Values.resources.limits.cpu }}
              memory: {{ .Values.resources.limits.memory }}
          ports:
            - containerPort: {{ .Values.ports.containerPort }}
          # Environment variable section
          env:
            {{- range $name, $value := .Values.env }}
            - name: {{ $name }}
              value: {{ $value | quote}}
            {{- end }}
            {{- if .Values.deployment.extraEnvs }}
{{ toYaml .Values.deployment.extraEnvs | indent 12 }}
            {{- end }}
          volumeMounts:
            {{- if .Values.deployment.volumeMounts }}
{{ toYaml .Values.deployment.volumeMounts | indent 12}}
            {{- end }}
      volumes:
      {{- if .Values.volumes }}
{{ toYaml .Values.volumes | indent 8}}
      {{- end }}

